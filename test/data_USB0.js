"use strict";
var index_1 = require('../index');
var chai = require("chai");
var expect = chai.expect;
var Logger;
before(function () {
    Logger = new index_1.default([{ baud: 2400, id: 1, dev: "/dev/ttyUSB0", model: 'SDM120CT' }, { baud: 2400, id: 1, dev: "/dev/ttyUSB0", model: 'SDM120CT' }]);
});
describe("main test", function () {
    this.timeout(50000);
    it("should return data", function (done) {
        Logger.data().then(function (answer) {
            var a = answer[0];
            console.log(a);
            expect(a).to.be.an('Object');
            expect(a.active).to.be.an('Object');
            expect(a.reactive).to.be.an('Object');
            expect(a.voltage).to.be.a('number');
            expect(a.current).to.be.a('number');
            expect(a.power).to.be.a('number');
            expect(a.factor).to.be.a('number');
            expect(a.phaseAngle).to.be.a('number');
            expect(a.hz).to.be.a('number');
            expect(a.active.import).to.be.a('number');
            expect(a.active.export).to.be.a('number');
            expect(a.active.total).to.be.a('number');
            expect(a.active.import).to.be.a('number');
            expect(a.active.export).to.be.a('number');
            expect(a.active.total).to.be.a('number');
            expect(a.apiVersion).to.be.a('string');
            expect(a.unixTimestamp).to.be.a('number');
            done();
        }).catch(function (err) {
            done(Error(err));
        });
    });
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlc3QvZGF0YV9VU0IwLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQSxzQkFBbUIsVUFFbkIsQ0FBQyxDQUY0QjtBQUU3QixJQUFZLElBQUksV0FBTSxNQUFNLENBQUMsQ0FBQTtBQUU3QixJQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDO0FBRTNCLElBQUksTUFBYyxDQUFDO0FBRW5CLE1BQU0sQ0FBQztJQUNILE1BQU0sR0FBRyxJQUFJLGVBQU0sQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxjQUFjLEVBQUUsS0FBSyxFQUFFLFVBQVUsRUFBRSxDQUFDLENBQUMsQ0FBQTtBQUN2SixDQUFDLENBQUMsQ0FBQTtBQUlGLFFBQVEsQ0FBQyxXQUFXLEVBQUU7SUFDbEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUVwQixFQUFFLENBQUMsb0JBQW9CLEVBQUUsVUFBVSxJQUFJO1FBRW5DLE1BQU0sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxJQUFJLENBQUMsVUFBQyxNQUFXO1lBRTNCLElBQUksQ0FBQyxHQUFHLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNsQixPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFBO1lBQ2QsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzdCLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDcEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN0QyxNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3BDLE1BQU0sQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDcEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUNsQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ25DLE1BQU0sQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7WUFDdkMsTUFBTSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUUvQixNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUMxQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUMxQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUN6QyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUMxQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUMxQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQztZQUd6QyxNQUFNLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3ZDLE1BQU0sQ0FBQyxDQUFDLENBQUMsYUFBYSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUM7WUFHMUMsSUFBSSxFQUFFLENBQUE7UUFDVixDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsVUFBQyxHQUFHO1lBQ1QsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBO1FBQ3BCLENBQUMsQ0FBQyxDQUFBO0lBRU4sQ0FBQyxDQUFDLENBQUM7QUFFUCxDQUFDLENBQUMsQ0FBQyIsImZpbGUiOiJ0ZXN0L2RhdGFfVVNCMC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IGxvZ2dlciBmcm9tICcuLi9pbmRleCdcblxuaW1wb3J0ICogYXMgY2hhaSBmcm9tIFwiY2hhaVwiO1xuXG5jb25zdCBleHBlY3QgPSBjaGFpLmV4cGVjdDtcblxubGV0IExvZ2dlcjogbG9nZ2VyO1xuXG5iZWZvcmUoKCkgPT4ge1xuICAgIExvZ2dlciA9IG5ldyBsb2dnZXIoW3sgYmF1ZDogMjQwMCwgaWQ6IDEsIGRldjogXCIvZGV2L3R0eVVTQjBcIiwgbW9kZWw6ICdTRE0xMjBDVCcgfSwgeyBiYXVkOiAyNDAwLCBpZDogMSwgZGV2OiBcIi9kZXYvdHR5VVNCMFwiLCBtb2RlbDogJ1NETTEyMENUJyB9XSlcbn0pXG5cblxuXG5kZXNjcmliZShcIm1haW4gdGVzdFwiLCBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy50aW1lb3V0KDUwMDAwKTtcblxuICAgIGl0KFwic2hvdWxkIHJldHVybiBkYXRhXCIsIGZ1bmN0aW9uIChkb25lKSB7XG5cbiAgICAgICAgTG9nZ2VyLmRhdGEoKS50aGVuKChhbnN3ZXI6IGFueSkgPT4ge1xuXG4gICAgICAgICAgICBsZXQgYSA9IGFuc3dlclswXTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKGEpXG4gICAgICAgICAgICBleHBlY3QoYSkudG8uYmUuYW4oJ09iamVjdCcpO1xuICAgICAgICAgICAgZXhwZWN0KGEuYWN0aXZlKS50by5iZS5hbignT2JqZWN0Jyk7XG4gICAgICAgICAgICBleHBlY3QoYS5yZWFjdGl2ZSkudG8uYmUuYW4oJ09iamVjdCcpO1xuICAgICAgICAgICAgZXhwZWN0KGEudm9sdGFnZSkudG8uYmUuYSgnbnVtYmVyJyk7XG4gICAgICAgICAgICBleHBlY3QoYS5jdXJyZW50KS50by5iZS5hKCdudW1iZXInKTtcbiAgICAgICAgICAgIGV4cGVjdChhLnBvd2VyKS50by5iZS5hKCdudW1iZXInKTtcbiAgICAgICAgICAgIGV4cGVjdChhLmZhY3RvcikudG8uYmUuYSgnbnVtYmVyJyk7XG4gICAgICAgICAgICBleHBlY3QoYS5waGFzZUFuZ2xlKS50by5iZS5hKCdudW1iZXInKTtcbiAgICAgICAgICAgIGV4cGVjdChhLmh6KS50by5iZS5hKCdudW1iZXInKTtcblxuICAgICAgICAgICAgZXhwZWN0KGEuYWN0aXZlLmltcG9ydCkudG8uYmUuYSgnbnVtYmVyJyk7XG4gICAgICAgICAgICBleHBlY3QoYS5hY3RpdmUuZXhwb3J0KS50by5iZS5hKCdudW1iZXInKTtcbiAgICAgICAgICAgIGV4cGVjdChhLmFjdGl2ZS50b3RhbCkudG8uYmUuYSgnbnVtYmVyJyk7XG4gICAgICAgICAgICBleHBlY3QoYS5hY3RpdmUuaW1wb3J0KS50by5iZS5hKCdudW1iZXInKTtcbiAgICAgICAgICAgIGV4cGVjdChhLmFjdGl2ZS5leHBvcnQpLnRvLmJlLmEoJ251bWJlcicpO1xuICAgICAgICAgICAgZXhwZWN0KGEuYWN0aXZlLnRvdGFsKS50by5iZS5hKCdudW1iZXInKTtcblxuXG4gICAgICAgICAgICBleHBlY3QoYS5hcGlWZXJzaW9uKS50by5iZS5hKCdzdHJpbmcnKTtcbiAgICAgICAgICAgIGV4cGVjdChhLnVuaXhUaW1lc3RhbXApLnRvLmJlLmEoJ251bWJlcicpO1xuXG5cbiAgICAgICAgICAgIGRvbmUoKVxuICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XG4gICAgICAgICAgICBkb25lKEVycm9yKGVycikpXG4gICAgICAgIH0pXG5cbiAgICB9KTtcblxufSk7Il0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
